!function(t){var s={};function i(e){if(s[e])return s[e].exports;var h=s[e]={i:e,l:!1,exports:{}};return t[e].call(h.exports,h,h.exports,i),h.l=!0,h.exports}i.m=t,i.c=s,i.d=function(t,s,e){i.o(t,s)||Object.defineProperty(t,s,{configurable:!1,enumerable:!0,get:e})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(s,"a",s),s},i.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},i.p="",i(i.s=0)}([function(t,s,i){"use strict";i.r(s);class e{constructor(t,s,i){this.ctx=t,this.W=s,this.H=i,this.width=64,this.height=64,this.posX=s/2,this.posY=i-64,this.hit=!1,this.rightHit=!1,this.leftHit=!1,this.topHit=!1,this.bottomHit=!1,this.imageSources=["./playerRunRight.png","./playerRunLeft.png","./jumpRight.png","./jumpLeft.png"],this.images=new Array(4),this.preloadImages(),this.bindMovements(),this.player=this.images[0],this.runOffset=0,this.runOffset2=0,this.jumpOffset=0,this.jumpOffset2=0,this.startedJumping=!1,this.draw=this.draw.bind(this),this.keys={left:!1,right:!1,up:!1,down:!1},this.jumps=0}preloadImages(){let t;for(let s=0;s<this.imageSources.length;s++)(t=new Image).src=this.imageSources[s],this.images[s]=t}bindMovements(){document.addEventListener("keydown",t=>{switch(t.key){case"ArrowUp":this.keys.up=!0;break;case"ArrowLeft":this.keys.left=!0;break;case"ArrowRight":this.keys.right=!0;break;case"ArrowDown":this.keys.down=!0}}),document.addEventListener("keyup",t=>{switch(t.key){case"ArrowUp":this.keys.up=!1;break;case"ArrowLeft":this.keys.left=!1;break;case"ArrowRight":this.keys.right=!1;break;case"ArrowDown":this.keys.down=!1}})}draw(t){this.H=t;let s=this.keys.up?this.jumpOffset2:this.runOffset2;this.posY>this.H-64&&(this.posY=this.H-64),this.posY<this.H-64&&!this.bottomHit&&(this.posY+=10),this.ctx.drawImage(this.player,s,0,64,64,this.posX,this.posY,this.width,this.height),this.update()}parseCollisions(){this.hit?(this.bottomHit&&(this.rightHit=!1,this.leftHit=!1),this.rightHit&&(this.posX-=2),this.leftHit&&(this.posX+=2),this.topHit&&(this.posY+=10)):(this.rightHit=!1,this.leftHit=!1,this.topHit=!1,this.bottomHit=!1)}checkJump(){this.keys.up&&!this.topHit?(this.jumps%5==0&&(this.startedJumping||(this.jumpOffset=0),this.jumpOffset+=64,this.jumpOffset=this.jumpOffset%704,(this.keys.left||this.player.src.indexOf("Left")>-1)&&(this.player=this.images[3]),(this.keys.right||this.player.src.indexOf("Right")>-1)&&(this.player=this.images[2]),this.startedJumping=!0),this.jumpOffset>=256&&this.jumpOffset<384?this.posY-=20:this.jumpOffset>=384&&this.jumpOffset<512&&!this.bottomHit?this.posY+=10:640===this.jumpOffset&&(this.startedJumping=!1),this.player.src.indexOf("Right")>-1?(this.player=this.images[2],this.jumpOffset2=640-this.jumpOffset):this.jumpOffset2=this.jumpOffset,this.jumps++):(this.posY<this.H-64&&!this.bottomHit&&(this.posY+=20),this.startedJumping=!1,this.jumpOffset=64,this.jumpOffset2=64)}checkWalk(){this.keys.left&&!this.leftHit&&(this.posX-=10,this.keys.up?this.jumpOffset<256&&(this.posX+=10):(this.runOffset+=64,this.runOffset2=this.runOffset%320,this.player=this.images[1])),this.keys.right&&!this.rightHit&&(this.posX+=10,this.keys.up?this.jumpOffset<256&&(this.posX-=10):(this.runOffset+=64,this.runOffset2=this.runOffset%320,this.runOffset2=256-this.runOffset2,this.player=this.images[0]))}update(){this.parseCollisions(),this.checkJump(),this.checkWalk()}}class h{constructor(t,s,i,e){this.ctx=t,this.W=s,this.H=i,this.season=e||"winter",this.createGhosts()}createGhosts(){switch(this.season){case"winter":this.ghosts=[{x:this.W/3,y:this.H-100,w:100,h:100},{x:this.W/3-100,y:this.H-200,w:100,h:100},{x:this.W/3+100,y:this.H-300,w:100,h:100}]}}draw(){this.ghosts.forEach(t=>{this.ctx.beginPath(),this.ctx.rect(t.x,t.y-=.01,t.w,t.h),this.ctx.lineWidth="4",this.ctx.strokeStyle="rgba(230, 0, 0, .01)",this.ctx.stroke()})}}class a{constructor(t,s,i){this.ctx=t,this.colors=["#80ff80","#ff80d5","#ff8533","#ffff4d","#84e1e1","#ff99bb","#ff531a","#4d4dff"],this.W=s,this.H=i,this.centers=[],this.stems=[],this.petals=[],this.makeFlowers(20),this.centersInc=new Array(this.centers.length);for(let t=0;t<this.centers.length;t++)this.centersInc[t]=this.centers[t],this.centersInc[t].radius=0;this.petalsInc=new Array(this.petals.length);for(let t=0;t<this.petals.length;t++)this.petalsInc[t]={},this.petalsInc[t].start=this.petals[t].start.slice(),this.petalsInc[t].point1=this.petals[t].start.slice(),this.petalsInc[t].point2=this.petals[t].start.slice(),this.petalsInc[t].point3=this.petals[t].start.slice();this.stemsInc=new Array(this.stems.length);for(let t=0;t<this.stems.length;t++)this.stemsInc[t]={},this.stemsInc[t].x=this.stems[t].x,this.stemsInc[t].y=this.stems[t].y,this.stemsInc[t].width=this.stems[t].width,this.stemsInc[t].height=0;this.draw=this.draw.bind(this),console.log(this.centers),this.done=!1}randomColor(){return this.colors[Math.floor(Math.random()*this.colors.length)]}makeFlowers(t){let s,i,e,h,a,n;for(let r=0;r<t;r++)i={x:(s={x:Math.floor(Math.random()*(this.W-200))+100,y:Math.floor(200*Math.random())+(this.H-300),maxRadius:Math.floor(10*Math.random())+5,color:this.randomColor()}).x-s.maxRadius/10,y:s.y+s.maxRadius/2,width:s.maxRadius/5,maxHeight:this.H-s.y},e={start:[s.x+s.maxRadius,s.y],maxPoint1:[s.x+5*s.maxRadius,s.y+5*s.maxRadius],maxPoint2:[s.x+5*s.maxRadius,s.y],maxPoint3:[s.x+5*s.maxRadius,s.y-5*s.maxRadius]},h={start:[s.x,s.y+s.maxRadius],maxPoint1:[s.x-5*s.maxRadius,s.y+5*s.maxRadius],maxPoint2:[s.x,s.y+5*s.maxRadius],maxPoint3:[s.x+5*s.maxRadius,s.y+5*s.maxRadius]},a={start:[s.x-s.maxRadius,s.y],maxPoint1:[s.x-5*s.maxRadius,s.y+5*s.maxRadius],maxPoint2:[s.x-5*s.maxRadius,s.y],maxPoint3:[s.x-5*s.maxRadius,s.y-5*s.maxRadius]},n={start:[s.x,s.y-s.maxRadius],maxPoint1:[s.x-5*s.maxRadius,s.y-5*s.maxRadius],maxPoint2:[s.x,s.y-5*s.maxRadius],maxPoint3:[s.x+5*s.maxRadius,s.y-5*s.maxRadius]},this.centers.push(s),this.stems.push(i),this.petals.push(e,h,a,n)}drawStems(){this.ctx.save(),this.ctx.fillStyle="green";const t=this.stems,s=this.stemsInc;let i;for(let e=0;e<s.length;e++)i=s[e],this.ctx.beginPath(),this.ctx.fillRect(i.x,i.y,i.width,i.height),this.ctx.closePath(),Math.round(i.height)!==t[e].maxHeight&&(i.height+=(t[e].maxHeight-i.height)/10);this.ctx.restore()}makePetal(t){const s=this.ctx;s.save(),s.beginPath(),s.moveTo(t.start[0],t.start[1]),s.quadraticCurveTo(t.point1[0],t.point1[1],t.point2[0],t.point2[1]),s.quadraticCurveTo(t.point3[0],t.point3[1],t.start[0],t.start[1]),s.closePath(),s.fillStyle=t.color,s.fill(),s.restore()}drawPetals(){this.ctx.save(),this.ctx.beginPath();const t=this.petals,s=this.petalsInc;let i,e;for(let h=0;h<s.length;h++)i=s[h],e=t[h],this.makePetal(i),Math.round(i.point1[0])!==t[h].maxPoint1[0]&&(this.done=!0,i.color=this.randomColor(),i.point1[0]+=(e.maxPoint1[0]-e.start[0])/250,i.point1[1]+=(e.maxPoint1[1]-e.start[1])/250,i.point2[0]+=(e.maxPoint2[0]-e.start[0])/250,i.point2[1]+=(e.maxPoint2[1]-e.start[1])/250,i.point3[0]+=(e.maxPoint3[0]-e.start[0])/250,i.point3[1]+=(e.maxPoint3[1]-e.start[1])/250)}makeCenter(t,s,i,e){const h=this.ctx;h.save(),h.beginPath(),h.arc(t,s,i,0,2*Math.PI,!1),h.closePath(),h.fillStyle=e,h.fill(),h.restore()}drawCenters(){const t=this.centers.slice(),s=this.centersInc.slice();let i,e;for(let h=0;h<s.length;h++)i=t[h],e=s[h],this.makeCenter(e.x,e.y,e.radius,e.color),Math.round(e.radius)<=i.maxRadius&&(e.radius+=(i.maxRadius-e.radius)/10)}draw(){this.drawStems(),this.drawCenters(),this.drawPetals()}}document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("game-canvas"),s=t.getContext("2d");let i=window.innerWidth,n=window.innerHeight;t.width=i,t.height=n;const r=new Image;r.src="./blocks.png",r.onload=(()=>{for(let t=0;t<i;t+=100)s.drawImage(r,t,n-90,100,100)});const o=new class{constructor(t,s,i){this.ctx=t,this.W=s,this.H=i-84,this.levelType="spring",this.stickman=new e(this.ctx,this.W,this.H-2),this.ghosts=new h(this.ctx,this.W,this.H-6),this.level=new a(this.ctx,this.W,this.H),this.orb=this.level.orb}run(){this.ctx.clearRect(0,0,this.W,this.H="winter"===this.levelType?this.H-.01:this.H),this.level.draw(),this.ghosts.draw(),this.stickman.draw(this.H),this.isStickmanColliding()}isStickmanColliding(){let t,s;return this.stickman.hit=!1,this.ghosts.ghosts.some(i=>{if([s,t]=[!1,!1],this.stickman.posX>=i.x&&this.stickman.posX<=i.x+i.w&&([this.stickman.leftHit,s]=[!0,!0]),this.stickman.posX+this.stickman.width>=i.x&&this.stickman.posX+this.stickman.width<=i.x+i.w&&([this.stickman.rightHit,s]=[!0,!0]),this.stickman.posY>=i.y&&this.stickman.posY<=i.y+i.h&&([this.stickman.topHit,t]=[!0,!0]),this.stickman.posY+this.stickman.height>=i.y&&this.stickman.posY+this.stickman.height<=i.y+i.h&&([this.stickman.bottomHit,t]=[!0,!0]),s&&t)return this.stickman.hit=!0,!0}),this.stickman.hit}isTouchingOrb(){const t=this.orb,s=this.stickman,i=Math.sqrt(Math.pow(t.posX-s.posX,2)+Math.pow(t.posY-s.posY,2));return i<t.radius+s.width/2&&console.log("touch!"),i<t.radius+s.width/2}}(s,i,n);new class{constructor(t,s,i,e,h){this.weather=t,this.stickman=s,this.ghosts=i,this.W=e,this.H=h,this.bindEvents=this.bindEvents.bind(this)}bindEvents(){document.addEventListener("keypress",t=>{if(32!==t.keyCode)return;const s=this.weather.ctx.getImageData(0,0,this.W,this.H).data;for(let t=0;t<s.length;t+=4)0===s[t]&&0===s[t+1]&&0===s[t+2]&&0===s[t+3]?(s[t]=255-s[t],s[t+1]=255-s[t+1],s[t+2]=255-s[t+2],s[t+3]=255):255===s[t]&&3===s[t+3]?s[t+3]=255:(s[t]=255-s[t],s[t+1]=255-s[t+1],s[t+2]=255-s[t+2]);const i=document.getElementById("screenshot-canvas");i.width=this.W,i.height=this.H;const e=i.getContext("2d"),h=e.createImageData(this.W,this.H);for(let t=0;t<h.data.length;t++)h.data[t]=s[t];e.putImageData(h,0,0),setTimeout(()=>{e.clearRect(0,0,this.W,this.H)},2e3)})}}(o.level,o.stickman,o.ghosts,i,n).bindEvents(),requestAnimationFrame(function t(){o.run(),requestAnimationFrame(t)})})}]);
//# sourceMappingURL=bundle.js.map