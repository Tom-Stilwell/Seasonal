{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/stickman.js","webpack:///./lib/ghosts.js","webpack:///./lib/spring.js","webpack:///./lib/seasonal.js","webpack:///./lib/game.js","webpack:///./lib/screenshot.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Stickman","constructor","ctx","W","H","this","width","height","posX","posY","hit","rightHit","leftHit","topHit","bottomHit","imageSources","images","Array","preloadImages","bindMovements","player","runOffset","runOffset2","jumpOffset","jumpOffset2","startedJumping","draw","bind","keys","left","right","up","down","jumps","image","length","Image","src","document","addEventListener","event","key","newHeight","spriteOffset","drawImage","update","parseCollisions","checkJump","indexOf","checkWalk","Ghosts","season","createGhosts","ghosts","x","y","w","h","forEach","ghost","beginPath","rect","lineWidth","strokeStyle","stroke","Spring","colors","centers","stems","petals","makeFlowers","centersInc","radius","petalsInc","start","slice","point1","point2","point3","stemsInc","console","log","done","randomColor","Math","floor","random","num","center","stem","petal1","petal2","petal3","petal4","maxRadius","color","maxHeight","maxPoint1","maxPoint2","maxPoint3","push","drawStems","save","fillStyle","fillRect","closePath","round","restore","makePetal","petal","moveTo","quadraticCurveTo","fill","drawPetals","petalInc","makeCenter","arc","PI","drawCenters","centerInc","canvasEl","getElementById","getContext","window","innerWidth","innerHeight","ground","onload","game","levelType","stickman","level","orb","run","clearRect","isStickmanColliding","overlapY","overlapX","some","isTouchingOrb","centersDistance","sqrt","pow","weather","bindEvents","e","keyCode","data","getImageData","screenshotCanvas","screenshotCtx","newImage","createImageData","putImageData","setTimeout","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Stickman {\n  constructor(ctx, W, H) {\n    this.ctx = ctx;\n    this.W = W;\n    this.H = H;\n\n    this.width = 64;\n    this.height = 64;\n    this.posX = W / 2;\n    this.posY = H - 64;\n    this.hit = false;\n    this.rightHit = false;\n    this.leftHit = false;\n    this.topHit = false;\n    this.bottomHit = false;\n\n    this.imageSources = [\n      \"./playerRunRight.png\",\n      \"./playerRunLeft.png\",\n      \"./jumpRight.png\",\n      \"./jumpLeft.png\"\n    ];\n\n    this.images = new Array(4);\n    this.preloadImages();\n\n    this.bindMovements();\n\n    this.player = this.images[0];\n\n    this.runOffset = 0;\n    this.runOffset2 = 0;\n\n    this.jumpOffset = 0;\n    this.jumpOffset2 = 0;\n    this.startedJumping = false;\n\n    this.draw = this.draw.bind(this);\n    this.keys = { left: false, right: false, up: false, down: false };\n\n    this.jumps = 0;\n  }\n\n  preloadImages() {\n    let image;\n    for (let i = 0; i < this.imageSources.length; i++) {\n      image = new Image();\n      image.src = this.imageSources[i];\n      this.images[i] = image;\n    }\n  }\n\n  bindMovements() {\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case \"ArrowUp\":\n          this.keys.up = true;\n          break;\n        case \"ArrowLeft\":\n          this.keys.left = true;\n          break;\n        case \"ArrowRight\":\n          this.keys.right = true;\n          break;\n        case \"ArrowDown\":\n          this.keys.down = true;\n          break;\n        default:\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      switch (event.key) {\n        case \"ArrowUp\":\n          this.keys.up = false;\n          break;\n        case \"ArrowLeft\":\n          this.keys.left = false;\n          break;\n        case \"ArrowRight\":\n          this.keys.right = false;\n          break;\n        case \"ArrowDown\":\n          this.keys.down = false;\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  draw(newHeight) {\n    // this.ctx.clearRect(0, 0, this.W, (this.H = this.H - 0.01));\n    this.H = newHeight;\n\n    let spriteOffset = this.keys.up ? this.jumpOffset2 : this.runOffset2;\n    if (this.posY > this.H - 64) this.posY = this.H - 64;\n    if (this.posY < this.H - 64 && !this.bottomHit) this.posY += 10;\n    this.ctx.drawImage(\n      this.player,\n      spriteOffset,\n      0,\n      64,\n      64,\n      this.posX,\n      this.posY,\n      this.width,\n      this.height\n    );\n    this.update();\n  }\n\n  parseCollisions() {\n    // console.log(this.hit);\n    if (!this.hit) {\n      this.rightHit = false;\n      this.leftHit = false;\n      this.topHit = false;\n      this.bottomHit = false;\n    } else {\n      if (this.bottomHit) {\n        this.rightHit = false;\n        this.leftHit = false;\n      }\n      if (this.rightHit) this.posX -= 2;\n      if (this.leftHit) this.posX += 2;\n      if (this.topHit) this.posY += 10;\n    }\n  }\n\n  checkJump() {\n    if (this.keys.up && !this.topHit) {\n      if (this.jumps % 5 === 0) {\n        if (!this.startedJumping) this.jumpOffset = 0;\n        this.jumpOffset += 64;\n        this.jumpOffset = this.jumpOffset % 704;\n        if (this.keys.left || this.player.src.indexOf(\"Left\") > -1)\n          this.player = this.images[3];\n        if (this.keys.right || this.player.src.indexOf(\"Right\") > -1)\n          this.player = this.images[2];\n        this.startedJumping = true;\n      }\n      if (this.jumpOffset >= 256 && this.jumpOffset < 384) {\n        this.posY -= 20;\n      } else if (\n        this.jumpOffset >= 384 &&\n        this.jumpOffset < 512 &&\n        !this.bottomHit\n      ) {\n        this.posY += 10;\n      } else if (this.jumpOffset === 640) {\n        this.startedJumping = false;\n      }\n\n      if (this.player.src.indexOf(\"Right\") > -1) {\n        this.player = this.images[2];\n        this.jumpOffset2 = 640 - this.jumpOffset;\n      } else {\n        this.jumpOffset2 = this.jumpOffset;\n      }\n\n      this.jumps++;\n    } else {\n      if (this.posY < this.H - 64 && !this.bottomHit) this.posY += 20;\n      this.startedJumping = false;\n      this.jumpOffset = 64;\n      this.jumpOffset2 = 64;\n    }\n  }\n\n  checkWalk() {\n    if (this.keys.left && !this.leftHit) {\n      this.posX -= 10;\n      if (!this.keys.up) {\n        this.runOffset += 64;\n        this.runOffset2 = this.runOffset % 320;\n        this.player = this.images[1];\n      } else if (this.jumpOffset < 256) {\n        this.posX += 10;\n      }\n    }\n\n    if (this.keys.right && !this.rightHit) {\n      this.posX += 10;\n      if (!this.keys.up) {\n        this.runOffset += 64;\n        this.runOffset2 = this.runOffset % 320;\n        this.runOffset2 = 256 - this.runOffset2;\n\n        this.player = this.images[0];\n      } else if (this.jumpOffset < 256) {\n        this.posX -= 10;\n      }\n    }\n  }\n\n  update() {\n    this.parseCollisions();\n    this.checkJump();\n    this.checkWalk();\n  }\n}\n","export default class Ghosts {\n  constructor(ctx, W, H, season) {\n    this.ctx = ctx;\n\n    this.W = W;\n    this.H = H;\n\n    this.season = season || \"winter\";\n\n    this.createGhosts();\n  }\n\n  createGhosts() {\n    switch (this.season) {\n      case \"winter\":\n        this.ghosts = [\n          { x: this.W / 3, y: this.H - 100, w: 100, h: 100 },\n          { x: this.W / 3 - 100, y: this.H - 200, w: 100, h: 100 },\n          { x: this.W / 3 + 100, y: this.H - 300, w: 100, h: 100 }\n        ];\n    }\n  }\n\n  draw() {\n    this.ghosts.forEach(ghost => {\n      this.ctx.beginPath();\n      this.ctx.rect(ghost.x, (ghost.y -= 0.01), ghost.w, ghost.h);\n      this.ctx.lineWidth = \"4\";\n      this.ctx.strokeStyle = \"rgba(230, 0, 0, .01)\";\n      this.ctx.stroke();\n    });\n  }\n}\n","export default class Spring {\n  constructor(ctx, W, H) {\n    this.ctx = ctx;\n\n    this.colors = [\n      \"#80ff80\",\n      \"#ff80d5\",\n      \"#ff8533\",\n      \"#ffff4d\",\n      \"#84e1e1\",\n      \"#ff99bb\",\n      \"#ff531a\",\n      \"#4d4dff\"\n    ];\n\n    this.W = W;\n    this.H = H;\n\n    this.centers = [];\n    this.stems = [];\n    this.petals = [];\n    this.makeFlowers(20);\n\n    this.centersInc = new Array(this.centers.length);\n    for (let i = 0; i < this.centers.length; i++) {\n      this.centersInc[i] = this.centers[i];\n      this.centersInc[i].radius = 0;\n    }\n\n    this.petalsInc = new Array(this.petals.length);\n\n    for (let i = 0; i < this.petals.length; i++) {\n      this.petalsInc[i] = {};\n      this.petalsInc[i].start = this.petals[i].start.slice();\n      this.petalsInc[i].point1 = this.petals[i].start.slice();\n      this.petalsInc[i].point2 = this.petals[i].start.slice();\n      this.petalsInc[i].point3 = this.petals[i].start.slice();\n    }\n\n    this.stemsInc = new Array(this.stems.length);\n\n    for (let i = 0; i < this.stems.length; i++) {\n      this.stemsInc[i] = {};\n      this.stemsInc[i].x = this.stems[i].x;\n      this.stemsInc[i].y = this.stems[i].y;\n      this.stemsInc[i].width = this.stems[i].width;\n      this.stemsInc[i].height = 0;\n    }\n\n    this.draw = this.draw.bind(this);\n    console.log(this.centers);\n    this.done = false;\n  }\n\n  randomColor() {\n    return this.colors[Math.floor(Math.random() * this.colors.length)];\n  }\n\n  makeFlowers(num) {\n    let center, stem, petal1, petal2, petal3, petal4;\n    for (let i = 0; i < num; i++) {\n      center = {\n        x: Math.floor(Math.random() * (this.W - 200)) + 100,\n        y: Math.floor(Math.random() * 200) + (this.H - 300),\n        maxRadius: Math.floor(Math.random() * 10) + 5,\n        color: this.randomColor()\n      };\n\n      stem = {\n        x: center.x - center.maxRadius / 10,\n        y: center.y + center.maxRadius / 2,\n        width: center.maxRadius / 5,\n        maxHeight: this.H - center.y\n      };\n\n      petal1 = {\n        start: [center.x + center.maxRadius, center.y],\n        maxPoint1: [\n          center.x + 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x + 5 * center.maxRadius, center.y],\n        maxPoint3: [\n          center.x + 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ]\n      };\n\n      petal2 = {\n        start: [center.x, center.y + center.maxRadius],\n        maxPoint1: [\n          center.x - 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x, center.y + 5 * center.maxRadius],\n        maxPoint3: [\n          center.x + 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ]\n      };\n\n      petal3 = {\n        start: [center.x - center.maxRadius, center.y],\n        maxPoint1: [\n          center.x - 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x - 5 * center.maxRadius, center.y],\n        maxPoint3: [\n          center.x - 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ]\n      };\n\n      petal4 = {\n        start: [center.x, center.y - center.maxRadius],\n        maxPoint1: [\n          center.x - 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x, center.y - 5 * center.maxRadius],\n        maxPoint3: [\n          center.x + 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ]\n      };\n\n      this.centers.push(center);\n      this.stems.push(stem);\n      this.petals.push(petal1, petal2, petal3, petal4);\n    }\n  }\n\n  drawStems() {\n    this.ctx.save();\n    this.ctx.fillStyle = \"green\";\n    const stems = this.stems;\n    const stemsInc = this.stemsInc;\n    let stem;\n    for (let i = 0; i < stemsInc.length; i++) {\n      stem = stemsInc[i];\n\n      this.ctx.beginPath();\n      this.ctx.fillRect(stem.x, stem.y, stem.width, stem.height);\n      this.ctx.closePath();\n\n      if (Math.round(stem.height) !== stems[i].maxHeight) {\n        stem.height += (stems[i].maxHeight - stem.height) / 10;\n      }\n    }\n    this.ctx.restore();\n  }\n\n  makePetal(petal) {\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(petal.start[0], petal.start[1]);\n    ctx.quadraticCurveTo(\n      petal.point1[0],\n      petal.point1[1],\n      petal.point2[0],\n      petal.point2[1]\n    );\n    ctx.quadraticCurveTo(\n      petal.point3[0],\n      petal.point3[1],\n      petal.start[0],\n      petal.start[1]\n    );\n    ctx.closePath();\n    ctx.fillStyle = petal.color;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawPetals() {\n    this.ctx.save();\n    this.ctx.beginPath();\n    const petals = this.petals;\n    const petalsInc = this.petalsInc;\n    let petalInc;\n    let petal;\n    for (let i = 0; i < petalsInc.length; i++) {\n      petalInc = petalsInc[i];\n      petal = petals[i];\n\n      this.makePetal(petalInc);\n      if (Math.round(petalInc.point1[0]) !== petals[i].maxPoint1[0]) {\n        this.done = true;\n        petalInc.color = this.randomColor();\n        petalInc.point1[0] += (petal.maxPoint1[0] - petal.start[0]) / 250;\n        petalInc.point1[1] += (petal.maxPoint1[1] - petal.start[1]) / 250;\n        petalInc.point2[0] += (petal.maxPoint2[0] - petal.start[0]) / 250;\n        petalInc.point2[1] += (petal.maxPoint2[1] - petal.start[1]) / 250;\n        petalInc.point3[0] += (petal.maxPoint3[0] - petal.start[0]) / 250;\n        petalInc.point3[1] += (petal.maxPoint3[1] - petal.start[1]) / 250;\n      }\n    }\n  }\n\n  makeCenter(x, y, radius, color) {\n    // console.log(radius);\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawCenters() {\n    const centers = this.centers.slice();\n    const centersInc = this.centersInc.slice();\n\n    let center;\n    let centerInc;\n    for (let i = 0; i < centersInc.length; i++) {\n      center = centers[i];\n      centerInc = centersInc[i];\n      this.makeCenter(\n        centerInc.x,\n        centerInc.y,\n        centerInc.radius,\n        centerInc.color\n      );\n      if (Math.round(centerInc.radius) <= center.maxRadius) {\n        centerInc.radius += (center.maxRadius - centerInc.radius) / 10;\n      }\n    }\n  }\n\n  draw() {\n    // console.log(this.done);\n    this.drawStems();\n    this.drawCenters();\n    this.drawPetals();\n  }\n}\n","import Snowfall from \"./snowfall\";\nimport Screenshot from \"./screenshot\";\nimport Stickman from \"./stickman\";\nimport Ghosts from \"./ghosts\";\nimport Game from \"./game\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"game-canvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n  let W = window.innerWidth;\n  let H = window.innerHeight;\n  canvasEl.width = W;\n  canvasEl.height = H;\n\n  const ground = new Image();\n  ground.src = \"./blocks.png\";\n  ground.onload = () => {\n    for (let i = 0; i < W; i += 100) {\n      ctx.drawImage(ground, i, H - 90, 100, 100);\n    }\n  };\n\n  const game = new Game(ctx, W, H);\n  const screenshot = new Screenshot(\n    game.level,\n    game.stickman,\n    game.ghosts,\n    W,\n    H\n  );\n  screenshot.bindEvents();\n\n  function run() {\n    game.run();\n    requestAnimationFrame(run);\n  }\n\n  requestAnimationFrame(run);\n});\n","import Snowfall from \"./snowfall\";\nimport Spring from \"./spring\";\nimport Stickman from \"./stickman\";\nimport Ghosts from \"./ghosts\";\n\nexport default class Game {\n  constructor(ctx, W, H) {\n    this.ctx = ctx;\n    this.W = W;\n    this.H = H - 84;\n\n    this.levelType = \"spring\";\n    this.stickman = new Stickman(this.ctx, this.W, this.H - 2);\n    this.ghosts = new Ghosts(this.ctx, this.W, this.H - 6);\n    // this.level = new Snowfall(this.ctx, this.W, this.H);\n    this.level = new Spring(this.ctx, this.W, this.H);\n\n    this.orb = this.level.orb;\n  }\n\n  run() {\n    this.ctx.clearRect(\n      0,\n      0,\n      this.W,\n      (this.H = this.levelType === \"winter\" ? this.H - 0.01 : this.H)\n    );\n    this.level.draw();\n    this.ghosts.draw();\n    this.stickman.draw(this.H);\n    this.isStickmanColliding();\n    // this.isTouchingOrb();\n  }\n\n  isStickmanColliding() {\n    let overlapY, overlapX;\n    this.stickman.hit = false;\n\n    this.ghosts.ghosts.some(ghost => {\n      [overlapX, overlapY] = [false, false];\n      if (\n        this.stickman.posX >= ghost.x &&\n        this.stickman.posX <= ghost.x + ghost.w\n      ) {\n        [this.stickman.leftHit, overlapX] = [true, true];\n        // console.log(\"left!\");\n      }\n      if (\n        this.stickman.posX + this.stickman.width >= ghost.x &&\n        this.stickman.posX + this.stickman.width <= ghost.x + ghost.w\n      ) {\n        [this.stickman.rightHit, overlapX] = [true, true];\n      }\n      if (\n        this.stickman.posY >= ghost.y &&\n        this.stickman.posY <= ghost.y + ghost.h\n      ) {\n        [this.stickman.topHit, overlapY] = [true, true];\n        // console.log(\"top!\");\n      }\n      if (\n        this.stickman.posY + this.stickman.height >= ghost.y &&\n        this.stickman.posY + this.stickman.height <= ghost.y + ghost.h\n      ) {\n        [this.stickman.bottomHit, overlapY] = [true, true];\n      }\n      if (overlapX && overlapY) {\n        this.stickman.hit = true;\n        return true;\n      }\n    });\n\n    return this.stickman.hit;\n  }\n\n  isTouchingOrb() {\n    const orb = this.orb;\n    const stickman = this.stickman;\n\n    const centersDistance = Math.sqrt(\n      Math.pow(orb.posX - stickman.posX, 2) +\n        Math.pow(orb.posY - stickman.posY, 2)\n    );\n\n    if (centersDistance < orb.radius + stickman.width / 2) {\n      console.log(\"touch!\");\n    }\n\n    return centersDistance < orb.radius + stickman.width / 2;\n  }\n}\n","import mergePixels from \"./mergePixels\";\n\nexport default class Screenshot {\n  constructor(weather, stickman, ghosts, W, H) {\n    this.weather = weather;\n    this.stickman = stickman;\n    this.ghosts = ghosts;\n    this.W = W;\n    this.H = H;\n\n    this.bindEvents = this.bindEvents.bind(this);\n  }\n\n  bindEvents() {\n    document.addEventListener(\"keypress\", e => {\n      if (e.keyCode !== 32) return;\n      const data = this.weather.ctx.getImageData(0, 0, this.W, this.H).data;\n      // const stickData = this.stickman.ctx.getImageData(0, 0, this.W, this.H)\n      //   .data;\n      // const ghostsData = this.ghosts.ctx.getImageData(0, 0, this.W, this.H)\n      //   .data;\n\n      // console.log(ghostsData);\n      // for (let i = 0; i < ghostsData.length; i++) {\n      //   if (ghostsData[i] !== 0) {\n      //     console.log(ghostsData[i]);\n      //   }\n      // }\n      // console.log(ghostsData);\n      // const data = mergePixels(stickData, weatherData, ghostsData);\n\n      for (let i = 0; i < data.length; i += 4) {\n        if (\n          data[i] === 0 &&\n          data[i + 1] === 0 &&\n          data[i + 2] === 0 &&\n          data[i + 3] === 0\n        ) {\n          data[i] = 255 - data[i];\n          data[i + 1] = 255 - data[i + 1];\n          data[i + 2] = 255 - data[i + 2];\n          data[i + 3] = 255;\n        } else if (data[i] === 255 && data[i + 3] === 3) {\n          data[i + 3] = 255;\n        } else {\n          data[i] = 255 - data[i];\n          data[i + 1] = 255 - data[i + 1];\n          data[i + 2] = 255 - data[i + 2];\n        }\n      }\n\n      const screenshotCanvas = document.getElementById(\"screenshot-canvas\");\n      screenshotCanvas.width = this.W;\n      screenshotCanvas.height = this.H;\n      const screenshotCtx = screenshotCanvas.getContext(\"2d\");\n\n      const newImage = screenshotCtx.createImageData(this.W, this.H);\n      for (let i = 0; i < newImage.data.length; i++) {\n        newImage.data[i] = data[i];\n      }\n\n      screenshotCtx.putImageData(newImage, 0, 0);\n      setTimeout(() => {\n        screenshotCtx.clearRect(0, 0, this.W, this.H);\n      }, 2000);\n    });\n  }\n}\n"],"sourceRoot":""}