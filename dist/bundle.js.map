{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/orb.js","webpack:///./lib/snowfall.js","webpack:///./lib/stickman.js","webpack:///./lib/ghosts.js","webpack:///./lib/spring.js","webpack:///./lib/seasonal.js","webpack:///./lib/game.js","webpack:///./lib/screenshot.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Orb","constructor","ctx","pos","color","this","posX","posY","radius","draw","save","beginPath","arc","Math","PI","gradient","createRadialGradient","addColorStop","shadowBlur","shadowColor","fillStyle","fill","restore","snowfall_Snowfall","W","H","mp","particles","Array","x","random","y","angle","orb","bind","particle","moveTo","update","cos","sin","Stickman","width","height","hit","rightHit","leftHit","topHit","bottomHit","imageSources","images","preloadImages","bindMovements","player","runOffset","runOffset2","jumpOffset","jumpOffset2","startedJumping","keys","left","right","up","down","jumps","image","length","Image","src","document","addEventListener","event","key","newHeight","spriteOffset","drawImage","parseCollisions","checkJump","indexOf","checkWalk","wrap","Ghosts","season","createGhosts","ghosts","w","h","forEach","ghost","rect","lineWidth","strokeStyle","stroke","spring_Spring","colors","centers","stems","petals","makeFlowers","centersInc","petalsInc","start","slice","point1","point2","point3","stemsInc","done","randomColor","floor","num","center","stem","petal1","petal2","petal3","petal4","maxRadius","maxHeight","maxPoint1","maxPoint2","maxPoint3","push","drawStems","fillRect","closePath","round","makePetal","petal","quadraticCurveTo","drawPetals","petalInc","makeCenter","drawCenters","centerInc","canvasEl","getElementById","getContext","window","innerWidth","innerHeight","ground","onload","game","levelType","stickman","level","run","clearRect","isStickmanColliding","isTouchingOrb","overlapY","overlapX","some","sqrt","pow","weather","bindEvents","e","keyCode","data","getImageData","screenshotCanvas","screenshotCtx","newImage","createImageData","putImageData","setTimeout","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Orb {\n  constructor(ctx, pos, color) {\n    this.posX = pos[0];\n    this.posY = pos[1];\n    this.ctx = ctx;\n    this.color = color;\n    this.radius = 30;\n  }\n\n  draw() {\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.arc(this.posX, this.posY, this.radius, 0, Math.PI * 2);\n    let gradient = this.ctx.createRadialGradient(\n      this.posX,\n      this.posY,\n      5,\n      this.posX,\n      this.posY,\n      30\n    );\n    gradient.addColorStop(0, \"white\");\n    gradient.addColorStop(1, this.color);\n    this.ctx.shadowBlur = 30;\n    this.ctx.shadowColor = \"white\";\n    this.ctx.fillStyle = gradient;\n    this.ctx.fill();\n    this.ctx.restore();\n  }\n}\n","import Orb from \"./orb\";\n\nexport default class Snowfall {\n  constructor(ctx, W, H) {\n    this.mp = 500;\n    this.particles = new Array(this.mp);\n    for (let i = 0; i < this.mp; i++) {\n      this.particles[i] = {\n        x: Math.random() * W,\n        y: Math.random() * H,\n        r: Math.random() * 3 + 1,\n        d: Math.random() * this.mp\n      };\n    }\n\n    this.ctx = ctx;\n    this.W = W;\n    this.H = H;\n    this.angle = 0;\n\n    this.orb = new Orb(this.ctx, [this.W - 500, this.H - 400], \"pink\");\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw() {\n    // this.ctx.clearRect(0, 0, this.W, this.H + 4);\n    this.ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    this.ctx.beginPath();\n    let particle;\n    for (let i = 0; i < this.mp; i++) {\n      particle = this.particles[i];\n      this.ctx.moveTo(particle.x, particle.y);\n      this.ctx.arc(particle.x, particle.y, particle.r, 0, Math.PI * 2, true);\n    }\n    this.ctx.fill();\n    this.orb.draw();\n    this.update();\n  }\n\n  update() {\n    this.angle += 0.005;\n    let particle;\n    for (let i = 0; i < this.mp; i++) {\n      particle = this.particles[i];\n\n      particle.y += Math.cos(this.angle + particle.d) + 1 + particle.r / 2;\n      particle.x += Math.sin(this.angle) * 2;\n\n      if (particle.x > this.W + 5 || particle.x < -5 || particle.y > this.H) {\n        if (i % 10 > 0) {\n          this.particles[i] = {\n            x: Math.random() * this.W,\n            y: -10,\n            r: particle.r,\n            d: particle.d\n          };\n        } else {\n          if (Math.sin(this.angle) > 0) {\n            //Enter from the left\n            this.particles[i] = {\n              x: -5,\n              y: Math.random() * this.H,\n              r: particle.r,\n              d: particle.d\n            };\n          } else {\n            //Enter from the right\n            this.particles[i] = {\n              x: this.W + 5,\n              y: Math.random() * this.H,\n              r: particle.r,\n              d: particle.d\n            };\n          }\n        }\n      }\n    }\n  }\n}\n","export default class Stickman {\n  constructor(ctx, W, H) {\n    this.ctx = ctx;\n    this.W = W;\n    this.H = H;\n\n    this.width = 64;\n    this.height = 64;\n    this.posX = W / 2;\n    this.posY = H - 64;\n    this.hit = false;\n    this.rightHit = false;\n    this.leftHit = false;\n    this.topHit = false;\n    this.bottomHit = false;\n\n    this.imageSources = [\n      \"./playerRunRight.png\",\n      \"./playerRunLeft.png\",\n      \"./jumpRight.png\",\n      \"./jumpLeft.png\"\n    ];\n\n    this.images = new Array(4);\n    this.preloadImages();\n\n    this.bindMovements();\n\n    this.player = this.images[0];\n\n    this.runOffset = 0;\n    this.runOffset2 = 0;\n\n    this.jumpOffset = 0;\n    this.jumpOffset2 = 0;\n    this.startedJumping = false;\n\n    this.draw = this.draw.bind(this);\n    this.keys = { left: false, right: false, up: false, down: false };\n\n    this.jumps = 0;\n  }\n\n  preloadImages() {\n    let image;\n    for (let i = 0; i < this.imageSources.length; i++) {\n      image = new Image();\n      image.src = this.imageSources[i];\n      this.images[i] = image;\n    }\n  }\n\n  bindMovements() {\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case \"ArrowUp\":\n          this.keys.up = true;\n          break;\n        case \"ArrowLeft\":\n          this.keys.left = true;\n          break;\n        case \"ArrowRight\":\n          this.keys.right = true;\n          break;\n        case \"ArrowDown\":\n          this.keys.down = true;\n          break;\n        default:\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      switch (event.key) {\n        case \"ArrowUp\":\n          this.keys.up = false;\n          break;\n        case \"ArrowLeft\":\n          this.keys.left = false;\n          break;\n        case \"ArrowRight\":\n          this.keys.right = false;\n          break;\n        case \"ArrowDown\":\n          this.keys.down = false;\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  draw(newHeight) {\n    // this.ctx.clearRect(0, 0, this.W, (this.H = this.H - 0.01));\n    this.H = newHeight;\n\n    let spriteOffset = this.keys.up ? this.jumpOffset2 : this.runOffset2;\n    if (this.posY > this.H - 64) this.posY = this.H - 64;\n    if (this.posY < this.H - 64 && !this.bottomHit) this.posY += 10;\n    this.ctx.drawImage(\n      this.player,\n      spriteOffset,\n      0,\n      64,\n      64,\n      this.posX,\n      this.posY,\n      this.width,\n      this.height\n    );\n    this.update();\n  }\n\n  parseCollisions() {\n    // console.log(this.hit);\n    if (!this.hit) {\n      this.rightHit = false;\n      this.leftHit = false;\n      this.topHit = false;\n      this.bottomHit = false;\n    } else {\n      if (this.bottomHit) {\n        this.rightHit = false;\n        this.leftHit = false;\n      }\n      if (this.rightHit) this.posX -= 2;\n      if (this.leftHit) this.posX += 2;\n      if (this.topHit) this.posY += 10;\n    }\n  }\n\n  checkJump() {\n    if (this.keys.up && !this.topHit) {\n      if (this.jumps % 5 === 0) {\n        if (!this.startedJumping) this.jumpOffset = 0;\n        this.jumpOffset += 64;\n        this.jumpOffset = this.jumpOffset % 704;\n        if (this.keys.left || this.player.src.indexOf(\"Left\") > -1)\n          this.player = this.images[3];\n        if (this.keys.right || this.player.src.indexOf(\"Right\") > -1)\n          this.player = this.images[2];\n        this.startedJumping = true;\n      }\n      if (this.jumpOffset >= 256 && this.jumpOffset < 384) {\n        this.posY -= 20;\n      } else if (\n        this.jumpOffset >= 384 &&\n        this.jumpOffset < 512 &&\n        !this.bottomHit\n      ) {\n        this.posY += 10;\n      } else if (this.jumpOffset === 640) {\n        this.startedJumping = false;\n      }\n\n      if (this.player.src.indexOf(\"Right\") > -1) {\n        this.player = this.images[2];\n        this.jumpOffset2 = 640 - this.jumpOffset;\n      } else {\n        this.jumpOffset2 = this.jumpOffset;\n      }\n\n      this.jumps++;\n    } else {\n      if (this.posY < this.H - 64 && !this.bottomHit) this.posY += 20;\n      this.startedJumping = false;\n      this.jumpOffset = 64;\n      this.jumpOffset2 = 64;\n    }\n  }\n\n  checkWalk() {\n    if (this.keys.left && !this.leftHit) {\n      this.posX -= 10;\n      if (!this.keys.up) {\n        this.runOffset += 64;\n        this.runOffset2 = this.runOffset % 320;\n        this.player = this.images[1];\n      } else if (this.jumpOffset < 256) {\n        this.posX += 10;\n      }\n    }\n\n    if (this.keys.right && !this.rightHit) {\n      this.posX += 10;\n      if (!this.keys.up) {\n        this.runOffset += 64;\n        this.runOffset2 = this.runOffset % 320;\n        this.runOffset2 = 256 - this.runOffset2;\n\n        this.player = this.images[0];\n      } else if (this.jumpOffset < 256) {\n        this.posX -= 10;\n      }\n    }\n  }\n\n  wrap() {\n    if (this.posX > this.W) {\n      this.posX = -this.width / 2;\n    }\n    if (this.posX + this.width / 2 < 0) {\n      this.posX = this.W;\n    }\n  }\n\n  update() {\n    this.parseCollisions();\n    this.checkJump();\n    this.checkWalk();\n    this.wrap();\n  }\n}\n","export default class Ghosts {\n  constructor(ctx, W, H, season) {\n    this.ctx = ctx;\n\n    this.W = W;\n    this.H = H;\n\n    this.season = season || \"winter\";\n\n    this.createGhosts();\n  }\n\n  createGhosts() {\n    switch (this.season) {\n      case \"winter\":\n        this.ghosts = [\n          { x: this.W / 3, y: this.H - 100, w: 100, h: 100 },\n          { x: this.W / 3 - 100, y: this.H - 200, w: 100, h: 100 },\n          { x: this.W / 3 + 100, y: this.H - 300, w: 100, h: 100 },\n          { x: this.W / 3 + 200, y: this.H - 300, w: 100, h: 100 },\n          { x: this.W / 3 + 300, y: this.H - 300, w: 100, h: 100 }\n        ];\n    }\n  }\n\n  draw() {\n    this.ghosts.forEach(ghost => {\n      this.ctx.beginPath();\n      this.ctx.rect(ghost.x, (ghost.y -= 0.01), ghost.w, ghost.h);\n      this.ctx.lineWidth = \"4\";\n      this.ctx.strokeStyle = \"rgba(230, 0, 0, .01)\";\n      this.ctx.stroke();\n    });\n  }\n}\n","import Orb from \"./orb\";\n\nexport default class Spring {\n  constructor(ctx, W, H) {\n    this.ctx = ctx;\n\n    this.colors = [\n      \"#80ff80\",\n      \"#ff80d5\",\n      \"#ff8533\",\n      \"#ffff4d\",\n      \"#84e1e1\",\n      \"#ff99bb\",\n      \"#ff531a\",\n      \"#4d4dff\"\n    ];\n\n    this.W = W;\n    this.H = H;\n\n    this.orb = new Orb(this.ctx, [this.W - 800, this.H - 200], \"yellow\");\n\n    this.centers = [];\n    this.stems = [];\n    this.petals = [];\n    this.makeFlowers(20);\n\n    this.centersInc = new Array(this.centers.length);\n    for (let i = 0; i < this.centers.length; i++) {\n      this.centersInc[i] = this.centers[i];\n      this.centersInc[i].radius = 0;\n    }\n\n    this.petalsInc = new Array(this.petals.length);\n\n    for (let i = 0; i < this.petals.length; i++) {\n      this.petalsInc[i] = {};\n      this.petalsInc[i].start = this.petals[i].start.slice();\n      this.petalsInc[i].point1 = this.petals[i].start.slice();\n      this.petalsInc[i].point2 = this.petals[i].start.slice();\n      this.petalsInc[i].point3 = this.petals[i].start.slice();\n    }\n\n    this.stemsInc = new Array(this.stems.length);\n\n    for (let i = 0; i < this.stems.length; i++) {\n      this.stemsInc[i] = {};\n      this.stemsInc[i].x = this.stems[i].x;\n      this.stemsInc[i].y = this.stems[i].y;\n      this.stemsInc[i].width = this.stems[i].width;\n      this.stemsInc[i].height = 0;\n    }\n\n    this.draw = this.draw.bind(this);\n    this.done = false;\n  }\n\n  randomColor() {\n    return this.colors[Math.floor(Math.random() * this.colors.length)];\n  }\n\n  makeFlowers(num) {\n    let center, stem, petal1, petal2, petal3, petal4;\n    for (let i = 0; i < num; i++) {\n      center = {\n        x: Math.floor(Math.random() * (this.W - 200)) + 100,\n        y: Math.floor(Math.random() * 200) + (this.H - 300),\n        maxRadius: Math.floor(Math.random() * 10) + 5,\n        color: this.randomColor()\n      };\n\n      stem = {\n        x: center.x - center.maxRadius / 10,\n        y: center.y + center.maxRadius / 2,\n        width: center.maxRadius / 5,\n        maxHeight: this.H - center.y\n      };\n\n      petal1 = {\n        start: [center.x + center.maxRadius, center.y],\n        maxPoint1: [\n          center.x + 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x + 5 * center.maxRadius, center.y],\n        maxPoint3: [\n          center.x + 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ]\n      };\n\n      petal2 = {\n        start: [center.x, center.y + center.maxRadius],\n        maxPoint1: [\n          center.x - 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x, center.y + 5 * center.maxRadius],\n        maxPoint3: [\n          center.x + 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ]\n      };\n\n      petal3 = {\n        start: [center.x - center.maxRadius, center.y],\n        maxPoint1: [\n          center.x - 5 * center.maxRadius,\n          center.y + 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x - 5 * center.maxRadius, center.y],\n        maxPoint3: [\n          center.x - 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ]\n      };\n\n      petal4 = {\n        start: [center.x, center.y - center.maxRadius],\n        maxPoint1: [\n          center.x - 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ],\n        maxPoint2: [center.x, center.y - 5 * center.maxRadius],\n        maxPoint3: [\n          center.x + 5 * center.maxRadius,\n          center.y - 5 * center.maxRadius\n        ]\n      };\n\n      this.centers.push(center);\n      this.stems.push(stem);\n      this.petals.push(petal1, petal2, petal3, petal4);\n    }\n  }\n\n  drawStems() {\n    this.ctx.save();\n    this.ctx.fillStyle = \"green\";\n    const stems = this.stems;\n    const stemsInc = this.stemsInc;\n    let stem;\n    for (let i = 0; i < stemsInc.length; i++) {\n      stem = stemsInc[i];\n\n      this.ctx.beginPath();\n      this.ctx.fillRect(stem.x, stem.y, stem.width, stem.height);\n      this.ctx.closePath();\n\n      if (Math.round(stem.height) !== stems[i].maxHeight) {\n        stem.height += (stems[i].maxHeight - stem.height) / 10;\n      }\n    }\n    this.ctx.restore();\n  }\n\n  makePetal(petal) {\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(petal.start[0], petal.start[1]);\n    ctx.quadraticCurveTo(\n      petal.point1[0],\n      petal.point1[1],\n      petal.point2[0],\n      petal.point2[1]\n    );\n    ctx.quadraticCurveTo(\n      petal.point3[0],\n      petal.point3[1],\n      petal.start[0],\n      petal.start[1]\n    );\n    ctx.closePath();\n    ctx.fillStyle = petal.color;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawPetals() {\n    this.ctx.save();\n    this.ctx.beginPath();\n    const petals = this.petals;\n    const petalsInc = this.petalsInc;\n    let petalInc;\n    let petal;\n    for (let i = 0; i < petalsInc.length; i++) {\n      petalInc = petalsInc[i];\n      petal = petals[i];\n\n      this.makePetal(petalInc);\n      if (Math.round(petalInc.point1[0]) !== petals[i].maxPoint1[0]) {\n        this.done = true;\n        petalInc.color = this.randomColor();\n        petalInc.point1[0] += (petal.maxPoint1[0] - petal.start[0]) / 100;\n        petalInc.point1[1] += (petal.maxPoint1[1] - petal.start[1]) / 100;\n        petalInc.point2[0] += (petal.maxPoint2[0] - petal.start[0]) / 100;\n        petalInc.point2[1] += (petal.maxPoint2[1] - petal.start[1]) / 100;\n        petalInc.point3[0] += (petal.maxPoint3[0] - petal.start[0]) / 100;\n        petalInc.point3[1] += (petal.maxPoint3[1] - petal.start[1]) / 100;\n      }\n    }\n  }\n\n  makeCenter(x, y, radius, color) {\n    // console.log(radius);\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawCenters() {\n    const centers = this.centers.slice();\n    const centersInc = this.centersInc.slice();\n\n    let center;\n    let centerInc;\n    for (let i = 0; i < centersInc.length; i++) {\n      center = centers[i];\n      centerInc = centersInc[i];\n      this.makeCenter(\n        centerInc.x,\n        centerInc.y,\n        centerInc.radius,\n        centerInc.color\n      );\n      if (Math.round(centerInc.radius) <= center.maxRadius) {\n        centerInc.radius += (center.maxRadius - centerInc.radius) / 10;\n      }\n    }\n  }\n\n  draw() {\n    // console.log(this.done);\n    this.drawStems();\n    this.drawCenters();\n    this.drawPetals();\n    this.orb.draw();\n  }\n}\n","import Snowfall from \"./snowfall\";\nimport Screenshot from \"./screenshot\";\nimport Stickman from \"./stickman\";\nimport Ghosts from \"./ghosts\";\nimport Game from \"./game\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"game-canvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n  let W = window.innerWidth;\n  let H = window.innerHeight;\n  canvasEl.width = W;\n  canvasEl.height = H;\n\n  const ground = new Image();\n  ground.src = \"./blocks.png\";\n  ground.onload = () => {\n    for (let i = 0; i < W; i += 100) {\n      ctx.drawImage(ground, i, H - 90, 100, 100);\n    }\n  };\n\n  const game = new Game(ctx, W, H);\n  const screenshot = new Screenshot(\n    game.level,\n    game.stickman,\n    game.ghosts,\n    W,\n    H\n  );\n  screenshot.bindEvents();\n\n  function run() {\n    game.run();\n    requestAnimationFrame(run);\n  }\n\n  requestAnimationFrame(run);\n});\n","import Snowfall from \"./snowfall\";\nimport Spring from \"./spring\";\nimport Stickman from \"./stickman\";\nimport Ghosts from \"./ghosts\";\n\nexport default class Game {\n  constructor(ctx, W, H) {\n    this.ctx = ctx;\n    this.W = W;\n    this.H = H - 84;\n\n    this.height = this.H;\n\n    this.levelType = \"winter\";\n    this.stickman = new Stickman(this.ctx, this.W, this.H - 2);\n    this.ghosts = new Ghosts(this.ctx, this.W, this.H - 6);\n    this.level = new Snowfall(this.ctx, this.W, this.H);\n    // this.level = new Spring(this.ctx, this.W, this.H);\n\n    this.orb = this.level.orb;\n  }\n\n  run() {\n    this.ctx.clearRect(\n      0,\n      0,\n      this.W,\n      (this.height = this.levelType === \"winter\" ? this.height - 0.01 : this.H)\n    );\n    this.level.draw();\n    this.ghosts.draw();\n    this.stickman.draw(this.height);\n    this.isStickmanColliding();\n    if (this.isTouchingOrb()) {\n      this.levelType = \"spring\";\n      this.level = new Spring(this.ctx, this.W, this.H);\n      this.orb = this.level.orb;\n    }\n  }\n\n  isStickmanColliding() {\n    let overlapY, overlapX;\n    this.stickman.hit = false;\n\n    this.ghosts.ghosts.some(ghost => {\n      [overlapX, overlapY] = [false, false];\n      if (\n        this.stickman.posX >= ghost.x &&\n        this.stickman.posX <= ghost.x + ghost.w\n      ) {\n        [this.stickman.leftHit, overlapX] = [true, true];\n        // console.log(\"left!\");\n      }\n      if (\n        this.stickman.posX + this.stickman.width >= ghost.x &&\n        this.stickman.posX + this.stickman.width <= ghost.x + ghost.w\n      ) {\n        [this.stickman.rightHit, overlapX] = [true, true];\n      }\n      if (\n        this.stickman.posY >= ghost.y &&\n        this.stickman.posY <= ghost.y + ghost.h\n      ) {\n        [this.stickman.topHit, overlapY] = [true, true];\n        // console.log(\"top!\");\n      }\n      if (\n        this.stickman.posY + this.stickman.height >= ghost.y &&\n        this.stickman.posY + this.stickman.height <= ghost.y + ghost.h\n      ) {\n        [this.stickman.bottomHit, overlapY] = [true, true];\n      }\n      if (overlapX && overlapY) {\n        this.stickman.hit = true;\n        return true;\n      }\n    });\n\n    return this.stickman.hit;\n  }\n\n  isTouchingOrb() {\n    if (!this.orb) {\n      return false;\n    }\n    const orb = this.orb;\n    const stickman = this.stickman;\n\n    const centersDistance = Math.sqrt(\n      Math.pow(orb.posX - stickman.posX, 2) +\n        Math.pow(orb.posY - stickman.posY, 2)\n    );\n\n    return centersDistance < orb.radius + stickman.width / 2;\n  }\n}\n","import mergePixels from \"./mergePixels\";\n\nexport default class Screenshot {\n  constructor(weather, stickman, ghosts, W, H) {\n    this.weather = weather;\n    this.stickman = stickman;\n    this.ghosts = ghosts;\n    this.W = W;\n    this.H = H;\n\n    this.bindEvents = this.bindEvents.bind(this);\n  }\n\n  bindEvents() {\n    document.addEventListener(\"keypress\", e => {\n      if (e.keyCode !== 32) return;\n      const data = this.weather.ctx.getImageData(0, 0, this.W, this.H).data;\n      // const stickData = this.stickman.ctx.getImageData(0, 0, this.W, this.H)\n      //   .data;\n      // const ghostsData = this.ghosts.ctx.getImageData(0, 0, this.W, this.H)\n      //   .data;\n\n      // console.log(ghostsData);\n      // for (let i = 0; i < ghostsData.length; i++) {\n      //   if (ghostsData[i] !== 0) {\n      //     console.log(ghostsData[i]);\n      //   }\n      // }\n      // console.log(ghostsData);\n      // const data = mergePixels(stickData, weatherData, ghostsData);\n\n      for (let i = 0; i < data.length; i += 4) {\n        if (\n          data[i] === 0 &&\n          data[i + 1] === 0 &&\n          data[i + 2] === 0 &&\n          data[i + 3] === 0\n        ) {\n          data[i] = 255 - data[i];\n          data[i + 1] = 255 - data[i + 1];\n          data[i + 2] = 255 - data[i + 2];\n          data[i + 3] = 255;\n        } else if (data[i] === 255 && data[i + 3] === 3) {\n          data[i + 3] = 255;\n        } else {\n          data[i] = 255 - data[i];\n          data[i + 1] = 255 - data[i + 1];\n          data[i + 2] = 255 - data[i + 2];\n        }\n      }\n\n      const screenshotCanvas = document.getElementById(\"screenshot-canvas\");\n      screenshotCanvas.width = this.W;\n      screenshotCanvas.height = this.H;\n      const screenshotCtx = screenshotCanvas.getContext(\"2d\");\n\n      const newImage = screenshotCtx.createImageData(this.W, this.H);\n      for (let i = 0; i < newImage.data.length; i++) {\n        newImage.data[i] = data[i];\n      }\n\n      screenshotCtx.putImageData(newImage, 0, 0);\n      setTimeout(() => {\n        screenshotCtx.clearRect(0, 0, this.W, this.H);\n      }, 2000);\n    });\n  }\n}\n"],"sourceRoot":""}